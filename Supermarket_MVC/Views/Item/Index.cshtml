@model Supermarket_MVC.Models.Item_Details

@{
    ViewBag.Title = "Index";
}

<h2 style="color:indigo"> Product Details</h2>


@using (Html.BeginForm("Index", "Item")) 
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.HiddenFor(model => model.Id)
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @if (Model == null || Model.Id == null || Model.Id == 0)
            {
                <input type="submit" value="Add Item" class="btn btn-primary" />
            }
            else
            {
                <input type="submit" value="Update Item" class="btn btn-primary" />
            }

        </div>
    </div>
</div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Name")
        </th>
        <th>
            @Html.DisplayName("Price")
        </th>
        <th>
            @Html.DisplayName("Quantity")
        </th>
        <th></th>
    </tr>

    @foreach (var item in (List<Supermarket_MVC.Models.Item_Details>)ViewData["ItemData"] )
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditDetails", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "DeleteDetails", new { id = item.Id })
            </td>
        </tr>
    }
</table>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
